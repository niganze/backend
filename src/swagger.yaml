openapi: 3.0.0
info:
  title: Your API Documentation
  version: 1.0.0
  description: API documentation for your backend project
servers:
  - url: http://localhost:5000
  - url: https://backend-ns20.onrender.com/
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
paths:
  /api/auth/login:
    post:
      summary: User login
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
        '401':
          description: Invalid credentials
  /api/auth/signup:
    post:
      summary: Register a new user
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Names
                - email
                - password
              properties:
                Names:
                  type: string
                email:
                  type: string
                password:
                  type: string
                Username:
                  type: string
                phoneNumber:
                  type: string
                location:
                  type: string
                role:
                  type: string
                  default: "user"
      responses:
        '200':
          description: User registered successfully
        '409':
          description: Email is already in use
  /api/auth/getAllUsers:
    get:
      summary: Get all users
      tags: [User Management]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of all users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                    email:
                      type: string
                    Names:
                      type: string
                    Username:
                      type: string
                    phoneNumber:
                      type: string
                    location:
                      type: string
                    role:
                      type: string
                    active:
                      type: boolean
  /api/auth/getUserById/{id}:
    get:
      summary: Get user by ID
      tags: [User Management]
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: User ID
      responses:
        '200':
          description: User data
        '404':
          description: User not found
  /api/auth/changePassword:
    post:
      summary: Change user password
      tags: [Authentication]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - currentpassword
                - newpassword
              properties:
                currentpassword:
                  type: string
                newpassword:
                  type: string
      responses:
        '200':
          description: Password changed successfully
        '401':
          description: Current password is incorrect
        '404':
          description: User not found
  /api/auth/forgotPassword:
    post:
      summary: Generate OTP for password reset
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
      responses:
        '200':
          description: OTP sent successfully
        '404':
          description: User not found
  /api/auth/resetPassword:
    post:
      summary: Reset user password using OTP
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - otp
                - newpassword
              properties:
                email:
                  type: string
                otp:
                  type: string
                newpassword:
                  type: string
      responses:
        '200':
          description: Password reset successfully
        '404':
          description: User not found
        '400':
          description: Invalid OTP
  /api/projects:
    get:
      summary: Get all projects
      tags: [Project Management]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                    projectName:
                      type: string
                    projectFile:
                      type: string
                    schoolId:
                      type: string
                    status:
                      type: string
  /api/projects:
    post:
      summary: Add a new project
      tags: [Project Management]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                projectName:
                  type: string
                projectFile:
                  type: string
                  format: binary
                schoolId:
                  type: string
                status:
                  type: string
      responses:
        '201':
          description: Project added successfully
        '400':
          description: Invalid input
  /api/projects/{id}:
    put:
      summary: Edit an existing project
      tags: [Project Management]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Project ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                projectName:
                  type: string
                projectFile:
                  type: string
                  format: binary
                schoolId:
                  type: string
                status:
                  type: string
      responses:
        '200':
          description: Project updated successfully
        '404':
          description: Project not found
  /api/projects/{id}:
    delete:
      summary: Delete a project
      tags: [Project Management]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Project ID
          schema:
            type: string
      responses:
        '200':
          description: Project deleted successfully
        '404':
          description: Project not found
  /api/projects/{id}/status:
    patch:
      summary: Set project status
      tags: [Project Management]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Project ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
      responses:
        '200':
          description: Project status updated successfully
        '404':
          description: Project not found
  /api/projects/{id}/download:
    get:
      summary: Download project file
      tags: [Project Management]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Project ID
          schema:
            type: string
      responses:
        '200':
          description: Project file downloaded successfully
        '404':
          description: Project not found
  /api/schools:
    get:
      summary: Get all schools
      tags: [School Management]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of all schools
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                    school_name:
                      type: string
                    district:
                      type: string
                    sector:
                      type: string
                    phone:
                      type: string
                    email:
                      type: string
                    username:
                      type: string
                    active:
                      type: boolean
    post:
      summary: Add a new school
      tags: [School Management]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - school_name
                - district
                - sector
                - phone
                - email
                - username
                - password
              properties:
                school_name:
                  type: string
                district:
                  type: string
                sector:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                username:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: School added successfully
        '400':
          description: Invalid input
  /api/schools/{id}:
    get:
      summary: Get a school by ID
      tags: [School Management]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: School ID
          schema:
            type: string
      responses:
        '200':
          description: School data
        '404':
          description: School not found
    put:
      summary: Edit a school
      tags: [School Management]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: School ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                school_name:
                  type: string
                district:
                  type: string
                sector:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: School updated successfully
        '404':
          description: School not found
    delete:
      summary: Delete a school
      tags: [School Management]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: School ID
          schema:
            type: string
      responses:
        '200':
          description: School deleted successfully
        '404':
          description: School not found
    patch:
      summary: Revoke or grant school status
      tags: [School Management]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: School ID
          schema:
            type: string
      responses:
        '200':
          description: School status updated successfully
        '404':
          description: School not found
